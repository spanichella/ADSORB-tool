print(REMAINING_BUDGET_percentage) # EUR
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
64*(168/100*100)*12 #Sebastiano_salary salary CHF 80% coverage
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(REMAINING_BUDGET/TOTAL_BUDGET*100,"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
Sebastiano_salary * years_Sebastiano
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(REMAINING_BUDGET/TOTAL_BUDGET*100,"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
print(TOTAL_COSTS) # EUR
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(REMAINING_BUDGET/TOTAL_BUDGET*100,"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
n_phd_students*phd_student  * years_PHD
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 64*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
Marcela_salary_Coverage
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
64*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
64*(168/100*80)*12
64*(168/100*100)*12
64*(168/100*80)*12
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
59*(168/100*70)*12 #postdoc salary CHF
postdoc <- 59*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
REMAINING_BUDGET
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
postdoc  * years_POSTDOC
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
Sebastiano_salary * years_Sebastiano
TOTAL_BUDGET <- 770476
years_Sebastiano<- 3
years_PHD<- 3
years_POSTDOC<- 1.5
n_phd_students<-1
#phD
50*(168/100*60)*12 #phD salary CHF
phd_student <- 50*(168/100*60)*12/1.05 #phD salary EUR
print(phd_student)
#postdoc
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
70*(168/100*80)*12 #Sebastiano_salary salary CHF 80% coverage
Sebastiano_salary<- 70*(168/100*80)*12/1.05 #Sebastiano salary EUR
print(Sebastiano_salary)
#Marcela_salary
Marcela_salary_Coverage<- 24000*3  # EUR
print(Marcela_salary_Coverage)
Transport<- 0  #Transport EUR
Workshops_summer_schools_organizations<-  0 #Transport EUR
Equipment<- 0 #Equipment EUR
Simulations<- 0 #For simulations - RTX 2070 GPUs
Tot_other_costs<- 34396 # EUR
TOTAL_COSTS<- n_phd_students*phd_student  * years_PHD + Sebastiano_salary * years_Sebastiano + postdoc  * years_POSTDOC + Simulations + Equipment+ Transport +Workshops_summer_schools_organizations + Marcela_salary_Coverage +Tot_other_costs
print(TOTAL_COSTS) # EUR
REMAINING_BUDGET<- TOTAL_BUDGET - TOTAL_COSTS
print(REMAINING_BUDGET) # EUR
REMAINING_BUDGET_percentage<- paste(round(REMAINING_BUDGET/TOTAL_BUDGET*100,2),"%",sep="")
print(REMAINING_BUDGET_percentage) # EUR
70*(168/100*100)*12
60*(168/100*70)*12 #postdoc salary CHF
postdoc <- 60*(168/100*70)*12/1.05 #postdoc salary EUR
print(postdoc)
postdoc  * years_POSTDOC
tdm_full_with_oracle_info_path
args <- commandArgs(trailingOnly = TRUE)
base_folder2 <- args[1]
trainingSetDirectory2 <- args[2]
testSetDirectory2  <- args[3]
simplifiedOracle2_path  <- args[4]
nameOfAttributeID2  <- args[5]
nameOfAttributeClass2  <- args[6]
# @author sebastiano panichella
#install packages if not installed yet
print("We install packages if not installed yet")
if (!require(tm)){ install.packages("tm") }
if (!require(stringr)){ install.packages("stringr") }
if (!require(stopwords)){ install.packages("stopwords") }
if (!require(slam)){ install.packages("slam") }
if (!require(snakecase)){ install.packages("snakecase") }
if (!require(data.table)){ install.packages("data.table") }
if (!require(XML)){ install.packages("XML") }
#load the libraries...
print("We load the libraries")
library(tm)
library(stringr)
library(stopwords)
library(slam)
base_folder <- "~/Desktop/Zurich-applied-Science/Collaborations/Marcela/eclipse/workspace/ML-pipeline/R-resources/R-scripts/"
if(!is.na(base_folder2))
{
base_folder<- base_folder2
print("1) argument \"docs_location\" used in R by setwd() ")
}
setwd(base_folder)
source("./utilities.R")
#path software artifacts
#trainingSetDirectory <- "./documents/1-use_cases"
#testSetDirectory <- "./documents/4-class_description"
trainingSetDirectory <- "./documents2/training-set"
testSetDirectory <- "./documents2/test-set"
simplifiedOracle_path <- "./documents2/truth_set_ICSME2015-simplified.csv"
if(!is.na(trainingSetDirectory2) && !is.na(testSetDirectory2) )
{
trainingSetDirectory<- trainingSetDirectory2
testSetDirectory<- testSetDirectory2
print("2) argument \"trainingSetDirectory\" given as argumet to the R script ")
print("3) \"testSetDirectory\" given as argumet to the R script ")
}
dir.create(trainingSetDirectory, showWarnings = FALSE, recursive = TRUE)
dir.create(testSetDirectory, showWarnings = FALSE, recursive = TRUE)
if(!is.na(simplifiedOracle2_path))
{
simplifiedOracle_path <- simplifiedOracle2_path
print("4) argument \"simplifiedOracle2_path\" given as argumet to the R script ")
}
#dir.create(simplifiedOracle_path, showWarnings = FALSE, recursive = TRUE)
if(length(args)==6)
{
print("All fine with the arguments..")
#print("Reading oracle information from:")
#print(simplifiedOracle_path)
simplifiedOracle <- read.csv(simplifiedOracle_path)
print("")
print("FINISHED to read oracle information, first two lines of oracle:")
print(simplifiedOracle[1:2,])
print("...")
simplifiedOracle[[nameOfAttributeID2]] <- as.character(simplifiedOracle[[nameOfAttributeID2]])
#print("Finished changing format simplifiedOracle$id ")
simplifiedOracle[[nameOfAttributeClass2]] <- as.character(simplifiedOracle[[nameOfAttributeClass2]])
#print("Finished changing format simplifiedOracle$class ")
print("")
# creating folders with pre-processed documents (e.g., camel case splitting, etc.)
print("-> CREATING folders with pre-processed documents")
trainingSetDirectory_preprocessed <- "./documents-preprocessed/trainingSetDirectory"
testSetDirectory_preprocessed <- "./documents-preprocessed/testSetDirectory"
# files where the matrices of training and test sets will be stored with all oracle information
print("-> STORING files concerning the matrices of training and test sets will all oracle information in the last column")
tdm_full_trainingSet_with_oracle_info_path <- "./documents-preprocessed/tdm_full_trainingSet_with_oracle_info.csv"
tdm_full_testSet_with_oracle_info_path <- "./documents-preprocessed/tdm_full_testSet_with_oracle_info.csv"
tdm_full_with_oracle_info_path <- "./documents-preprocessed/tdm_full_with_oracle_info.csv"
# we preprocess files
#pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed, ".txt")
#pre_processing(testSetDirectory, testSetDirectory_preprocessed, ".txt")
#-> check if the directory need to be cleaned before nex step
print("---> PREPROCESSING Training and Test Sets files ")
pre_processing(trainingSetDirectory, trainingSetDirectory_preprocessed)
pre_processing(testSetDirectory, testSetDirectory_preprocessed)
# directories to index
#print("directories with files to index")
directories <- c(trainingSetDirectory_preprocessed, testSetDirectory_preprocessed)
# the following command index the software artifacts
# and store this data in "tm" (it is a sparse matrix)
tdm <- build_tm_matrix(directories)
print("---> CREATING Sparse Term-by-Document-Matrix from Training and Test Sets files ")
# extract only the interesting part of the matrix
Training_files <- list.files(trainingSetDirectory, recursive=TRUE)
TestSet_files <- list.files(testSetDirectory, recursive=TRUE)
#we obtain the full term by document matrics
print("---> we obtain the full term by document matrics")
tdm_full <- as.matrix(tdm)
tdm_full<- t(tdm_full)
print("---> Created Non-Sparse Term-by-Document-Matrix from Training and Test Sets files ")
tdm_full_trainingSet <- tdm_full[Training_files,]
tdm_full_testSet <- tdm_full[TestSet_files,]
#FINAL PART: we finally add oracle information to the csv files
print("---FINAL PART: we add oracle information to the Term-by-Document-Matrix")
tdm_full_trainingSet_with_oracle_info<- as.data.frame(tdm_full_trainingSet)
tdm_full_testSet_with_oracle_info<- as.data.frame(tdm_full_testSet)
temp1<- rep("",length(tdm_full_trainingSet_with_oracle_info[,1]))
temp2<- rep("",length(tdm_full_testSet_with_oracle_info[,1]))
tdm_full_trainingSet_with_oracle_info<- cbind(tdm_full_trainingSet_with_oracle_info,temp1)
tdm_full_testSet_with_oracle_info<- cbind(tdm_full_testSet_with_oracle_info,temp2)
#we rename the last column in "oracle"
print("---> ADD column with \"oracle\" name")
colnames(tdm_full_trainingSet_with_oracle_info)[length(colnames(tdm_full_trainingSet_with_oracle_info))] <-"oracle"
colnames(tdm_full_testSet_with_oracle_info)[length(colnames(tdm_full_testSet_with_oracle_info))] <-"oracle"
tdm_full_trainingSet_with_oracle_info$oracle<- ""
tdm_full_testSet_with_oracle_info$oracle<- ""
#for each raw in training set we update the oracle information
print("---> UPDATING the oracle information for each raw in training set")
i<-1
rows_trainingSet<- rownames(tdm_full_trainingSet_with_oracle_info)
for(i in 1:length(rows_trainingSet)){
pos<- which(simplifiedOracle==rows_trainingSet[i])
tdm_full_trainingSet_with_oracle_info$oracle[i] <- simplifiedOracle[[nameOfAttributeClass2]][pos]
}
#for each raw in test set we update the oracle information
print("---> UPDATING the oracle information for each raw in test set")
i<-1
rows_testSet<- rownames(tdm_full_testSet_with_oracle_info)
for(i in 1:length(rows_testSet)){
pos<- which(simplifiedOracle==rows_testSet[i])
tdm_full_testSet_with_oracle_info$oracle[i] <- simplifiedOracle[[nameOfAttributeClass2]][pos]
}
print("WRITING the CSV files (uuseful for WEKA) of training and test sets with the oracle information")
write.csv(tdm_full_trainingSet_with_oracle_info,tdm_full_trainingSet_with_oracle_info_path)
write.csv(tdm_full_testSet_with_oracle_info,tdm_full_testSet_with_oracle_info_path)
tdm_full_with_oracle_info<- rbind(tdm_full_trainingSet_with_oracle_info,tdm_full_testSet_with_oracle_info)
write.csv(tdm_full_with_oracle_info,tdm_full_with_oracle_info_path)
print("DONE Rscript analysis")
}
if(length(args)!=6)
{
print("Error: some problems with the arguments of the TbD analysis")
}
tdm_full_with_oracle_info_path
